name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - develop

env:
  SERVICE_NAME: ummumeen-api
  DEPLOY_LOCATION_DEV: /home/ubuntu/system-storage/apps/dev.ummumeen-api
  RELEASE_LOCATION: /home/ubuntu/system-storage/releases

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event.pull_request.base.ref == 'develop' && 
        startsWith(github.event.head_commit.message, '') # We canâ€™t directly match regex on commit message in GH Actions triggers, but you can refine here or in workflow_dispatch.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Cache node_modules and dist
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    if: github.event.pull_request.base.ref == 'develop' && 
        (contains(github.event.head_commit.message, 'build') || 
         contains(github.event.head_commit.message, 'alpha') || 
         contains(github.event.head_commit.message, 'beta') || 
         contains(github.event.head_commit.message, 'rc'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install -g nexe

      - name: Build binary with nexe
        run: nexe dist/src/main.js -o ${{ env.SERVICE_NAME }}_build -t x64-20

      - name: Archive binary
        run: tar -czf ${{ env.SERVICE_NAME }}_build.tar ${{ env.SERVICE_NAME }}_build

      - name: Copy archive to remote server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: ${{ env.SERVICE_NAME }}_build.tar
          target: ~

      - name: Deploy on remote server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo systemctl stop dev.${{ env.SERVICE_NAME }}
            sudo cp ${{ env.SERVICE_NAME }}_build.tar ${{ env.RELEASE_LOCATION }}
            cd ${{ env.DEPLOY_LOCATION_DEV }}
            unlink dev-${{ env.SERVICE_NAME }}
            rm -rf *
            tar -xzf ${{ env.RELEASE_LOCATION }}/${{ env.SERVICE_NAME }}_build.tar
            ln -s ${{ env.DEPLOY_LOCATION_DEV }}/${{ env.SERVICE_NAME }}_build dev-${{ env.SERVICE_NAME }}
            rm -f ~/${{ env.SERVICE_NAME }}_build.tar
            sudo systemctl start dev.${{ env.SERVICE_NAME }}
